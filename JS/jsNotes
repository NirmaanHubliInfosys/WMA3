what are the datatypes?
undefined
null
Boolean
String
Symbol
number
Object
BigInt


Boolean:
It represents a logical entity and two values are true or false.

>,>=,<,<=,==
true represents 1, false represents 0
Boolean are generally used for conditional testing

ex:
var a=3;
var b=4;
var c=3;
(a<=b)//false

number:
It represent the number and is written with or without decimal

ex:
var a=1,
var a=1.2

Object:used to store collection of data.

ex:
var person
{
firstName:"rashmi";
lastName:"xyz";
id:1
}

undefined:
Its declared but not initialized

var a;

string :series of charcters 
var name="jyothi"

null 
var a=123;
var a=null;
typeof(a);

String operations:

var name="ReNuKa";//denoted by double quote  
name.length;

var a='r'// denoted by single quote

name.toLowerCase();
name[0];
name[name.length-1];

var a="John";
var b="john";
a==b

trim()

It is using for before and after extra spaces removing but you can't able to remove spaces in between.

var name="        jyothi     xyz    ";
name.trim();

o/p:'jyothi      ..'

var city="mysore";
city.slice(1);

var city="mysore";
city.slice(1);
'ysore'
var city="mysore";
city.slice(2);
'sore'
var city="mysore";
city.slice(2,7);
'sore'
var city="mysore";
city.slice(2,6);
'sore'
var city="mysore";
city.slice(2,5);
'sor'
var city="mysore";
city.slice(2,4);
'so'

var a="Javascript"
a.replace('a','A');


Examples
var a="Javascript"
a.replace('a','A');
'JAvascript'
a.replace(/a/g,'A');
'JAvAscript'
var b="java"
undefined
b.replace(/a/g,'+');
'j+v+'
var name="        jyothi     xyz    ";
undefined
name.trim();
'jyothi     xyz'
name.replace(/ /,'*');
'*       jyothi     xyz    '
name.replace(/ /g,'*');
'********jyothi*****xyz****'
name.replace(/ /g,'-');
'--------jyothi-----xyz----'
var movieName="kantara"
var rating="4.5"
var type="Devotion";
var ind="sandalwood";
undefined
var out="An" +movieName+"is an"+type+"movie with rating of"+rating+"and from ind"+ind"."
VM1132:1 Uncaught SyntaxError: Unexpected string
var out="An" +movieName+"is an"+type+"movie with rating of"+rating+"and from ind"+ind"
VM1140:1 Uncaught SyntaxError: Invalid or unexpected token
var out="An" +movieName+"is an"+type+"movie with rating of"+rating+"and from ind"+ind


out
'Ankantarais anDevotionmovie with rating of4.5and from indsandalwood'
var out="An"+"&nbsp" +movieName+"is an"+type+"movie with rating of"+rating+"and from ind"+ind
out
'An&nbspkantarais anDevotionmovie with rating of4.5and from indsandalwood'
var out="An " +movieName+"is an "+type+"movie with rating of"+rating+"and from ind"+ind
out
'An kantarais an Devotionmovie with rating of4.5and from indsandalwood'
var out="An " +movieName+" is an "+type+"movie with rating of"+rating+"and from ind"+ind
out
'An kantara is an Devotionmovie with rating of4.5and from indsandalwood'
var out="An"+"&nbsp" +movieName+"is an"+type+"movie with rating of"+rating+"and from ind"+ind
out
'An&nbspkantarais anDevotionmovie with rating of4.5and from indsandalwood'
var out="An"+" " +movieName+" "+"is an"+type+"movie with rating of"+" "+rating+"and from ind"+ind
out
'An kantara is anDevotionmovie with rating of 4.5and from indsandalwood'
var out="An"+" " +movieName+" "+"is an" +type+ " movie with rating of"+" "+rating+"and from ind"+ind
var out="An"+" " +movieName+" "+"is an " +type+ " movie with rating of"+" "+rating+"and from ind"+ind
out
'An kantara is an Devotion movie with rating of 4.5and from indsandalwood'


EXAMPLE:
var name="chandana"
undefined
var name1="jyothi"
undefined
name+" "+name1
'chandana jyothi'
var a=10;
undefined
var b=20;
undefined
a+b;
30
a-b;
-10
var a=10;var b="Rashmi";
undefined
a-b;
NaN
not a number
VM1825:1 Uncaught SyntaxError: Unexpected identifier 'a'
var c=10;
undefined
var d=10;
undefined
c*d;
100
var a=10;
undefined
var b=20;
undefined
b*a;
200
a%b;
10
a/b
0.5
b%a;
0

ex:
var a="10"
undefined
var b="20"
undefined
a+b
'1020'
var c="renuka"
undefined
a+c
'10renuka'
c+a
'renuka10'
a-b;
-10

var a="10"
var b=30;
a+b
'1030'
a-b;
-20


"10"+20+30;
10+20+"30"-1

"10"+20+"30"-1;

var a="10a"
var b=1
a-b

"10"+20+30;
'102030'
"10"+20+"30"-1;
102029
var a="10a"
var b=1
undefined
a-b
NaN
a+b
'10a1'

"10"+20+30;
'102030'
"10"+20+"30"-1;
102029
var a="10a"
var b=1
undefined
a-b
NaN
a+b
'10a1'
parseInt(a)
10
parseInt(a)-b
9

var movie={
 movieName:"kantara",
 rating:"4.5",
 type:"Devotion",
ind:"sandalwood"
}

var movie=[{
 movieName:"kantara",
 rating:"4.5",
 type:"Devotion",
ind:"sandalwood"
},
{
   movieName:"yajamana",
 rating:"4.2",
 type:"family",
ind:"sandalwood"  
}]

Example:
var movie=[{
 movieName:"kantara",
 rating:"4.5",
 type:"Devotion",
ind:"sandalwood"
}]
undefined
movie[0].ind
'sandalwood'
movie;
[{…}]0: ind: "sandalwood"movieName: "kantara"rating: "4.5"type: "Devotion"[[Prototype]]: Objectconstructor: ƒ Object()hasOwnProperty: ƒ hasOwnProperty()isPrototypeOf: ƒ isPrototypeOf()propertyIsEnumerable: ƒ propertyIsEnumerable()toLocaleString: ƒ toLocaleString()toString: ƒ toString()valueOf: ƒ valueOf()__defineGetter__: ƒ __defineGetter__()__defineSetter__: ƒ __defineSetter__()__lookupGetter__: ƒ __lookupGetter__()__lookupSetter__: ƒ __lookupSetter__()__proto__: (...)get __proto__: ƒ __proto__()set __proto__: ƒ __proto__()length: 1[[Prototype]]: Array(0)
movie[0].movieName
'kantara'
var movie=[{
 movieName:"kantara",
 rating:"4.5",
 type:"Devotion",
ind:"sandalwood"
},
{
   movieName:"yajamana",
 rating:"4.2",
 type:"family",
ind:"sandalwood"  
}]
undefined
movie;
(2) [{…}, {…}]0: {movieName: 'kantara', rating: '4.5', type: 'Devotion', ind: 'sandalwood'}1: {movieName: 'yajamana', rating: '4.2', type: 'family', ind: 'sandalwood'}length: 2[[Prototype]]: Array(0)
movie[1].movieName
'yajamana'

javascript variable
4 type of js variables

using var;
using let;
using const;
using nothin;

variable :storind data values

ex:
var x=5;
var y=9;
var z=x+y;


const:If you want general role always declare variable with const

let:if you think the value of the variable can change use let;

Ex:
const price1=7;
const price2=6;

let total=price1+price2;


functon myfunc(){
    var a=10;
    if(a==10){
        var a=20;
        console.log("conditional block a=",a);

    }
     console.log("function block a=",a);
}

functon myfunc(){
    var a=10;
    if(a==10){
        var a=20;
        console.log("conditional block a=",a);

    }
     console.log("function block a=",a);
}

VM334:1 Uncaught SyntaxError: Unexpected identifier 'myfunc'
functon myfunc(){;
    var a=10;
    if(a==10){
        var a=20;
        console.log("conditional block a=",a);

    }
     console.log("function block a=",a);
}

VM340:1 Uncaught SyntaxError: Unexpected identifier 'myfunc'
functon myfunc(){
    var a=10;
    if(a==10){
        var a=20;
        console.log("conditional block a=",a);

    }
     console.log("function block a=",a);
};

VM347:1 Uncaught SyntaxError: Unexpected identifier 'myfunc'
functon method(){
    var a=10;
    if(a==10){
        var a=20;
        console.log("conditional block a=",a);

    }
     console.log("function block a=",a);
};

VM380:1 Uncaught SyntaxError: Unexpected identifier 'method'
function myfunc(){
    var a=10;
    if(a==10){
        var a=20;
        console.log("conditional block a=",a);

    }
     console.log("function block a=",a);
};

undefined
a
20
a
20
myfunc().a
VM394:5 conditional block a= 20
VM394:8 function block a= 20
VM440:1 Uncaught TypeError: Cannot read properties of undefined (reading 'a')
    at <anonymous>:1:9
(anonymous) @ VM440:1
function myfunc(){
    var a=10;
    if(a==10){
        let a=20;
        console.log("conditional block a=",a);

    }
     console.log("function block a=",a);
};
undefined
a
20
a
20
myfunc().a
VM487:5 conditional block a= 20
VM487:8 function block a= 10
VM504:1 Uncaught TypeError: Cannot read properties of undefined (reading 'a')
    at <anonymous>:1:9
(anonymous) @ VM504:1
let c=10;
undefined
let c=20;
undefined
var d=10;
undefined
var d=20;
undefined
const e=10;
undefined
const e=20;
undefined
const f=30;
undefined
var result=e+f;
undefined
result
50


Difference between let const var

var a=20;
function f(){
    console.log(a);
}
f();
console.log(a);



function f(){
    var a=10;
    console.log(a)
}
f();
console.log(a)


// function func() 
// {
//     var x = 5;
 
//     if(1) 
//     {
//         var y = 10; 
 
//         console.log(x); 
//         console.log(y);
//     }
     
// }
 
// func();
 
// console.log(z);z is not defined
// console.log(y);

output:
5
10
Uncaught ReferenceError: z is not defined
    at <anonymous>:17:13



    var color ="Red";
var color= "Green";
console.log("color :"+color); 
var color="Blue";
console.log(color); 

Another issue with the var keyword is that if you declare a variable without the keyword var, then that variable will have global scope. To get a better understanding, consider the following code:


for(x = 0; x < array.length; x++){  //index has a global scope
    //code
 }

Example of var:
function func() 
{
    var x = 5;
 
    if(x==5) 
    {
        var y = 10; 
 
        console.log(x); 
        console.log(y);
    }
     
}
 
func();
 
console.log(z);z is not defined
console.log(y);

Example of let
 function func() 
{
    let x = 10; 
 
    if(x === 10) 
    {
        let y = 20; 
 
        console.log(x); 
        console.log(y); 
    }
}
 
 
func();
console.log(x); 
console.log(y);

let c=20;
undefined
c=40;
40
const d=20;
VM1620:1 Uncaught SyntaxError: Identifier 'd' has already been declared
const f=20;
undefined
f =40;
VM1716:1 Uncaught TypeError: Assignment to constant variable.
    at <anonymous>:1:3
(anonymous) @ VM1716:1
let h=20;h=40;console.log(h);
VM1835:1 40
undefined
const k=20;k=40;console.log(k);


control  statements

if else
if else if
if else if nested

if else
syntax:
if(Conditon){
    console.log("stmt1")
}else{
    console.log("stmt2")
}

example of if else
var a=10;
if(a==20){
    console.log("true")
}else
console.log("flase")



example of if else if else
var name="chandana";
if(name=="chandana"){
    console.log(`Hi ${name} you are admin`);
}else if(name=="jyothi"){
    console.log(`Hi ${name} you are super admin`);
}else{
    console.log(`Hi ${name} we don't know you `);
}


var name="chandana";
if(name=="chandana"){
    console.log(`Hi ${name} you are admin`);
}else if(name=="jyothi"){
    console.log(`Hi ${name} you are super admin`);
}else{
    console.log(`Hi ${name} we don't know you `);
}

VM2007:3 Hi chandana you are admin
undefined
var name="jyothi";
if(name=="chandana"){
    console.log(`Hi ${name} you are admin`);
}else if(name=="jyothi"){
    console.log(`Hi ${name} you are super admin`);
}else{
    console.log(`Hi ${name} we don't know you `);
}

VM2033:5 Hi jyothi you are super admin
undefined
var name="chandana";
if(name=="preeti"){
    console.log(`Hi ${name} you are admin`);
}else if(name=="jyothi"){
    console.log(`Hi ${name} you are super admin`);
}else{
    console.log(`Hi ${name} we don't know you `);
}

VM2057:7 Hi chandana we don't know you 



renuk@Renuka MINGW64 ~/OneDrive/Desktop/WMA3TO4 (master)
$ git clone "https://github.com/NirmaanHubliInfosys/WMA3.git"
Cloning into 'WMA3'...
remote: Enumerating objects: 13, done.
remote: Counting objects: 100% (13/13), done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 13 (delta 1), reused 13 (delta 1), pack-reused 0
Receiving objects: 100% (13/13), 67.76 KiB | 3.76 MiB/s, done.
Resolving deltas: 100% (1/1), done.

renuk@Renuka MINGW64 ~/OneDrive/Desktop/WMA3TO4 (master)


For Loop:
when you want to excecute  a block of statement multiple Time,you can use looping statment to avoid writing the same statements again and again

syntax:
for(begin ; end ; stop){
    loop code
}

ex:
for(i=1;i<5;i++){
    console.log(i);
}

var  i=10;
while(i>14){
    console.log("true");
}

let text = "";
let i = 0;
do {
  text += i + "<br>";
  i++;
}
while (i < 5);


javascript operators:
Arithmetic Operators
Assignment Operators
Comparison Operators
Logical Operators
Conditional Operators
Type Operators

what is difference between == and ===?

== :comparison between two values and comparing data 
===:comparison between two values and comparing data and data type

var a=10;
var b="10";

if(a==b){
    console.log("condition is true")
}

var a=10;
var b=10;

if(a==b){
    console.log("condition is true")
}
VM93:5 condition is true
undefined
var a=10;
var b="10";

if(a==b){
    console.log("condition is true")
}else{console.log("condition is false")}

VM192:5 condition is true
undefined
var a=10;
var b="10";

if(a===b){
    console.log("condition is true")
}else{console.log("condition is false")}
VM200:6 condition is false
undefined
var a=renuka;
var b="renuka";

if(a==b){
    console.log("condition is true")
}else{console.log("condition is false")}

ternary operator

var a=10;
(a==10)?true:false;



if(a==10){
    console.log("true");
}else{
    console.log("false")
}
output:true


Array methods in js?

filter method
pop method
map method
find method
concat method
slice method
push method
sort method
shift 
unshift


filter method:
syntax:
variablename.filter(methodname);

var age=[2,6,8,9,7];

function myfunction(age)
{
    return age>=4;
}
age.filter(myfunction);
output:(4) [6, 8, 9, 7]

map method:
syntax:
variablename.map(methodname);

ex:
var age=[6,8,9,7];

function myfunction(age)
{
   return age-4;
}
age.map(myfunction);
output:[2,4,5,3]


concat method:
combination of array
syntax:
array1.concat(array2)

var firstname="jyothi"
var lastname="xyz"
firstname.concat(""+lastname)


push:
add the values in end of the array
var frontend=["HTML","CSS","BOOTSTRAP"]
frontend.push("Angular");
output:(4) ['HTML', 'CSS', 'BOOTSTRAP', 'Angular']

unshift
always add the beginning of the array

var frontend=["HTML","CSS","BOOTSTRAP"]
frontend.unshift("Angular");

frontend
(4) ['Angular', 'HTML', 'CSS', 'BOOTSTRAP']

pop method :always remove the value end of the array
var frontend=["HTML","CSS","BOOTSTRAP"]
frontend.pop();


shift():always remove the value beginning of the array
var frontend=["HTML","CSS","BOOTSTRAP"]

frontend.shift();
output:(2) ['CSS', 'BOOTSTRAP']


find method:
syntax:
Array.find();

var data=[1,100,40,6,12,20,10];

function checkEligibility(data){
    return data>18;
}
console.log(data.find(checkEligibility));
output:100


sort method:

syntax:
array.sort(compareFunction);


ex:
var data=[1,100,40,6,12,20,10];
data.sort();
console.log(data);

output:(7) [1, 10, 100, 12, 20, 40, 6]//it is not in sorting order
  
var data=[1,100,40,6,12,20,10];
data.sort(function(a,b){return a-b})
console.log(data);

output:(7) [1, 6, 10, 12, 20, 40, 100]


javascript EventS
MouseEvent
FocusEvent
LoadEvent

